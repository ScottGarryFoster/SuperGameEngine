#pragma once
#include <vector>
#include <string>


// +------------------------------+
// Generated by SuperGenerator as an
// SuperEnum. See Tools for details.
// +------------------------------+
namespace SuperGameInput
{
    /// <summary>
    /// Buttons clickable upon a mouse.
    /// </summary>
    enum class MouseButton : uint8_t
    {
        /// <summary>
        /// Only used for unsuccessful parsing.
        /// </summary>
        Unknown,

        Left,

        Right,

        Middle,

        Back,

        Forward,
    };

    /// <summary>
    /// Accompanies enums to provide extra functionality.
    /// </summary>
    class EMouseButton
    {
    public:
        static MouseButton Min() { return MouseButton::Left; }
        static MouseButton Max() { return MouseButton::Forward; }

        static MouseButton* ToArray()
        {
            static MouseButton returnArray[] =
            {
                MouseButton::Left,
                MouseButton::Right,
                MouseButton::Middle,
                MouseButton::Back,
                MouseButton::Forward,
            };
            
            return returnArray;
        }

        static std::vector<MouseButton> ToVector()
        {
            static std::vector<MouseButton> returnVector =
            {
                MouseButton::Left,
                MouseButton::Right,
                MouseButton::Middle,
                MouseButton::Back,
                MouseButton::Forward,
            };
            
            return returnVector;
        }

        static std::string ToString(MouseButton value)
        {
            switch (value)
            {
                case MouseButton::Unknown: return "Unknown";
                case MouseButton::Left: return "Left";
                case MouseButton::Right: return "Right";
                case MouseButton::Middle: return "Middle";
                case MouseButton::Back: return "Back";
                case MouseButton::Forward: return "Forward";
            }
            
            return "Unknown";
        }

        static MouseButton FromString(std::string value, bool checkCase = true)
        {
            if (checkCase)
            {
                if (value == "Unknown") return MouseButton::Unknown;
                if (value == "Left") return MouseButton::Left;
                if (value == "Right") return MouseButton::Right;
                if (value == "Middle") return MouseButton::Middle;
                if (value == "Back") return MouseButton::Back;
                if (value == "Forward") return MouseButton::Forward;
            }
            else
            {
                std::string valueLower = ToLower(value); 
                if (valueLower == "unknown") return MouseButton::Unknown;
                if (valueLower == "left") return MouseButton::Left;
                if (valueLower == "right") return MouseButton::Right;
                if (valueLower == "middle") return MouseButton::Middle;
                if (valueLower == "back") return MouseButton::Back;
                if (valueLower == "forward") return MouseButton::Forward;
            }
            
            return MouseButton::Unknown;
        }

        /// <summary>
        /// Converts to lower. Copy from StringHelpers to ensure Enum does not require
        /// any outside dependency. Although we could include a header, doing so restricts
        /// the project which holds StringHelpers.
        /// </summary>
        static std::string ToLower(const std::string & input)
        {
            std::string output = input;
            for (char& c : output)
            {
                if (c >= 'A' && c <= 'Z')
                {
                    c = c - 'A' + 'a';
                }
            }
            return output;
        }
    };
}
