<SuperEnum Type="Standard">
    <Header>
    #pragma once
    </Header>
    <Namespace Name="SuperGameInput" />
    <EnumComment>
        The types of events that can be delivered.
    </EnumComment>
    <EnumName Name="WindowEventType">
        <Unknown Value="-1" HideFromLists="true">
            Only used for unsuccessful parsing.
        </Unknown>
        <SDL_FIRSTEVENT Value="0">
            Unused (do not remove)
        </SDL_FIRSTEVENT>
        
        <!-- Application events -->
        <SDL_QUIT>
            User-requested quit
        </SDL_QUIT>
        
        <!-- These application events have special meaning on iOS, see README-ios.md for details -->
        <SDL_APP_TERMINATING>
            The application is being terminated by the OS
            Called on iOS in applicationWillTerminate()
            Called on Android in onDestroy()
        </SDL_APP_TERMINATING>
        <SDL_APP_LOWMEMORY>
            The application is low on memory, free memory if possible.
            Called on iOS in applicationDidReceiveMemoryWarning()
            Called on Android in onLowMemory()
        </SDL_APP_LOWMEMORY>
        <SDL_APP_WILLENTERBACKGROUND>
            The application is about to enter the background
            Called on iOS in applicationWillResignActive()
            Called on Android in onPause()
        </SDL_APP_WILLENTERBACKGROUND>
        <SDL_APP_DIDENTERBACKGROUND>
            The application did enter the background and may not get CPU for some time
            Called on iOS in applicationDidEnterBackground()
            Called on Android in onPause()
        </SDL_APP_DIDENTERBACKGROUND>
        <SDL_APP_WILLENTERFOREGROUND>
            The application is about to enter the foreground
            Called on iOS in applicationWillEnterForeground()
            Called on Android in onResume()
        </SDL_APP_WILLENTERFOREGROUND>
        <SDL_APP_DIDENTERFOREGROUND>
            The application is now interactive
            Called on iOS in applicationDidBecomeActive()
            Called on Android in onResume()
        </SDL_APP_DIDENTERFOREGROUND>
        
        <SDL_LOCALECHANGED>
            The user's locale preferences have changed.
        </SDL_LOCALECHANGED>
        
        <!-- Display events -->
        <SDL_DISPLAYEVENT>
            Display state change
        </SDL_DISPLAYEVENT>
        
        <!-- Window events -->
        <SDL_WINDOWEVENT>
            Window state change
        </SDL_WINDOWEVENT>
        <SDL_SYSWMEVENT>
            System specific event
        </SDL_SYSWMEVENT>
        
        <!-- Keyboard events -->
        <SDL_KEYDOWN>
            Key pressed
        </SDL_KEYDOWN>
        <SDL_KEYUP>
            Key released
        </SDL_KEYUP>
        <SDL_TEXTEDITING>
            Keyboard text editing (composition)
        </SDL_TEXTEDITING>
        <SDL_TEXTINPUT>
            Keyboard text input
        </SDL_TEXTINPUT>
        <SDL_KEYMAPCHANGED>
            Keymap changed due to a system event such as an
            input language or keyboard layout change.
        </SDL_KEYMAPCHANGED>
        <SDL_TEXTEDITING_EXT>
            Extended keyboard text editing (composition)
        </SDL_TEXTEDITING_EXT>
        
        <!-- Mouse events -->
        <SDL_MOUSEMOTION>
            Mouse moved
        </SDL_MOUSEMOTION>
        <SDL_MOUSEBUTTONDOWN>
            Mouse button pressed
        </SDL_MOUSEBUTTONDOWN>
        <SDL_MOUSEBUTTONUP>
            Mouse button released
        </SDL_MOUSEBUTTONUP>
        <SDL_MOUSEWHEEL>
            Mouse wheel motion
        </SDL_MOUSEWHEEL>
        
        <!-- Joystick events -->
        <SDL_JOYAXISMOTION>
            Joystick axis motion
        </SDL_JOYAXISMOTION>
        <SDL_JOYBALLMOTION>
            Joystick trackball motion
        </SDL_JOYBALLMOTION>
        <SDL_JOYHATMOTION>
            Joystick hat position change
        </SDL_JOYHATMOTION>
        <SDL_JOYBUTTONDOWN>
            Joystick button pressed
        </SDL_JOYBUTTONDOWN>
        <SDL_JOYBUTTONUP>
            Joystick button released
        </SDL_JOYBUTTONUP>
        <SDL_JOYDEVICEADDED>
            A new joystick has been inserted into the system
        </SDL_JOYDEVICEADDED>
        <SDL_JOYDEVICEREMOVED>
            An opened joystick has been removed
        </SDL_JOYDEVICEREMOVED>
        <SDL_JOYBATTERYUPDATED>
            Joystick battery level change
        </SDL_JOYBATTERYUPDATED>
        
        <!-- Game controller events -->
        <SDL_CONTROLLERAXISMOTION>
            Game controller axis motion
        </SDL_CONTROLLERAXISMOTION>
        <SDL_CONTROLLERBUTTONDOWN>
            Game controller button pressed
        </SDL_CONTROLLERBUTTONDOWN>
        <SDL_CONTROLLERBUTTONUP>
            Game controller button released
        </SDL_CONTROLLERBUTTONUP>
        <SDL_CONTROLLERDEVICEADDED>
            A new Game controller has been inserted into the system
        </SDL_CONTROLLERDEVICEADDED>
        <SDL_CONTROLLERDEVICEREMOVED>
            An opened Game controller has been removed
        </SDL_CONTROLLERDEVICEREMOVED>
        <SDL_CONTROLLERDEVICEREMAPPED>
            The controller mapping was updated
        </SDL_CONTROLLERDEVICEREMAPPED>
        <SDL_CONTROLLERTOUCHPADDOWN>
            Game controller touchpad was touched
        </SDL_CONTROLLERDEVICEREMAPPED>
        <SDL_CONTROLLERTOUCHPADMOTION>
            Game controller touchpad finger was moved
        </SDL_CONTROLLERDEVICEREMAPPED>
        <SDL_CONTROLLERTOUCHPADUP>
            Game controller touchpad finger was lifted
        </SDL_CONTROLLERTOUCHPADUP>
        <SDL_CONTROLLERSENSORUPDATE>
            Game controller sensor was updated
        </SDL_CONTROLLERSENSORUPDATE>
        <SDL_CONTROLLERUPDATECOMPLETE_RESERVED_FOR_SDL3 />
        <SDL_CONTROLLERSTEAMHANDLEUPDATED>
            Game controller Steam handle has changed
        </SDL_CONTROLLERSTEAMHANDLEUPDATED>
        
        <!-- Touch events -->
        <SDL_FINGERDOWN />
        <SDL_FINGERUP />
        <SDL_FINGERMOTION />
        
        <!-- Gesture events -->
        <SDL_DOLLARGESTURE />
        <SDL_DOLLARRECORD />
        <SDL_MULTIGESTURE />
        
        <!-- Clipboard events -->
        <SDL_CLIPBOARDUPDATE>
            The clipboard changed
        </SDL_CLIPBOARDUPDATE>
        
        <!-- Drag and drop events -->
        <SDL_DROPFILE>
            The system requests a file open
        </SDL_DROPFILE>
        <SDL_DROPTEXT>
            text/plain drag-and-drop event
        </SDL_DROPTEXT>
        <SDL_DROPBEGIN>
            A new set of drops is beginning (NULL filename)
        </SDL_DROPBEGIN>
        <SDL_DROPCOMPLETE>
            Current set of drops is now complete (NULL filename)
        </SDL_DROPCOMPLETE>
        
        <!-- Audio hotplug events -->
        <SDL_AUDIODEVICEADDED>
            A new audio device is available
        </SDL_AUDIODEVICEADDED>
        <SDL_AUDIODEVICEREMOVED>
            An audio device has been removed.
        </SDL_AUDIODEVICEREMOVED>
        
        <!-- Sensor events -->
        <SDL_SENSORUPDATE>
            A sensor was updated
        </SDL_SENSORUPDATE>
        
        <!-- Render events -->
        <SDL_RENDER_TARGETS_RESET>
            The render targets have been reset and their contents need to be updated
        </SDL_RENDER_TARGETS_RESET>
        <SDL_RENDER_DEVICE_RESET>
            The device has been reset and all textures need to be recreated
        </SDL_RENDER_DEVICE_RESET>
        
        <!-- SDL utility events -->
        <SDL_USEREVENT>
            Events ::SDL_USEREVENT through ::SDL_LASTEVENT are for your use,
            and should be allocated with SDL_RegisterEvents()
        </SDL_USEREVENT>
        <SDL_LASTEVENT>
            This last event is only for bounding internal arrays
        </SDL_LASTEVENT>
    </EnumName>
</SuperEnum>